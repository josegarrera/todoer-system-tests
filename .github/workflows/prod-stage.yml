name: Production Stage

on:
  workflow_dispatch:

jobs:
  prod-release:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Generic System Release
        uses: actions/github-script@v4
        id: trigger-release
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const workflow = 'Generic System Release Stage';
            const response = await github.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });

            const workflow_id = response.data.workflows.find(w => w.name === workflow)?.id;

            if (!workflow_id) {
              throw new Error(`No workflow found with name: ${workflow}`);
            }

            await github.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflow_id,
              ref: context.ref,
              inputs: {
                environment: 'prod'
              }
            });

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run Smoke Tests
        run: echo "Running smoke tests..." && npm run test:smoke

      - name: Wait for Generic System Release to finish
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const workflow = 'Generic System Release Stage';
            const response = await github.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });

            const workflow_id = response.data.workflows.find(w => w.name === workflow)?.id;

            if (!workflow_id) {
              throw new Error(`No workflow found with name: ${workflow}`);
            }

            let completed = false;
            let attempts = 0;
            const max_attempts = 60;

            while (!completed && attempts < max_attempts) {
              const run = await github.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow_id,
                status: 'in_progress',
              });

              if (run.data.total_count === 0) {
                completed = true;
              } else {
                console.log('Generic System Release Stage still in progress, waiting...');
                await new Promise(r => setTimeout(r, 10000));
              }
              attempts++;
            }

            if (!completed) {
              throw new Error('Timeout: Generic System Release Stage did not complete in time');
            }

      - name: Run Curl Tests
        run: |
          echo "Checking if Task Manager is up..."
          curl -f http://${{ secrets.PROD_VM_IP }}:3001/health || exit 1
          echo "Checking if Title Generator is up..."
          curl -f http://${{ secrets.PROD_VM_IP }}:3002/health || exit 1
